{"version":3,"sources":["actions/actionTypes.js","reducers/serviceList.js","reducers/serviceAdd.js","reducers/serviceFilter.js","store/index.js","actions/actionCreators.js","components/ServiceAdd/ServiceAdd.jsx","components/ServiceList/ServiceList.jsx","components/ServiceFilter/ServiceFilter.jsx","components/ServiceApp.jsx","App.js","reportWebVitals.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","CHANGE_SERVICE_FIELD","CLEAR_SERVICE_FIELD","EDIT_SERVICE","EDIT_AND_SAVE_SERVICE","FILTER_SERVICE","REMOVE_FILTERED_SERVICE","initialState","id","nanoid","name","price","status","filteredServices","reducer","combineReducers","serviceList","state","action","type","payload","Number","serviceId","serviceName","servicePrice","editService","find","service","map","filter","serviceAdd","value","serviceFilter","store","createStore","clearServiceField","ServiceAdd","props","edit","editState","item","useSelector","dispatch","useDispatch","handleChange","e","target","changeServiceField","className","onSubmit","setEdit","preventDefault","onChange","onClick","ServiceList","items","viewItems","handleRemove","removeService","removeFilteredService","handleEdit","ServiceFilter","services","useState","actualServices","setActualServices","useEffect","htmlFor","inputValue","toLowerCase","includes","placeholder","ServiceApp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90eb2c41.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const CLEAR_SERVICE_FIELD = 'CLEAR_SERVICE_FIELD';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const EDIT_AND_SAVE_SERVICE = 'EDIT_AND_SAVE_SERVICE';\nexport const FILTER_SERVICE = 'FILTER_SERVICE';\nexport const REMOVE_FILTERED_SERVICE = 'REMOVE_FILTERED_SERVICE';\n","import {nanoid} from 'nanoid';\nimport {ADD_SERVICE, EDIT_AND_SAVE_SERVICE, REMOVE_SERVICE} from '../actions/actionTypes'\n\nconst initialState = [\n    {id: nanoid(), name: 'Замена стекла', price: 21000},\n    {id: nanoid(), name: 'Замена дисплея', price: 25000},\n];\n\nexport function serviceListReducer(state = initialState, action) {\n    switch (action.type) {\n        case ADD_SERVICE:\n            const {name, price} = action.payload;\n            return [...state, {id: nanoid(), name, price: Number(price)}];\n        case EDIT_AND_SAVE_SERVICE:\n            const {serviceId, serviceName, servicePrice} = action.payload;\n            const editService = state.find((service) => service.id === serviceId);\n            editService.name = serviceName;\n            editService.price = Number(servicePrice);\n            return state.map((service) => (service.id === serviceId) ? editService : service);\n        case REMOVE_SERVICE:\n            const {id} = action.payload;\n            return state.filter(service => service.id !== id);\n        default:\n            return state;\n    }\n}\n","import {CHANGE_SERVICE_FIELD, CLEAR_SERVICE_FIELD, EDIT_SERVICE} from '../actions/actionTypes'\n\nconst initialState = {name: '', price: ''};\n\nexport function serviceAddReducer(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_SERVICE_FIELD:\n            const {name, value} = action.payload;\n            return {...state, [name]: value};\n        case CLEAR_SERVICE_FIELD:\n            return {...state, ...initialState};\n        case EDIT_SERVICE:\n            const {serviceName, price} = action.payload;\n            return {...state, name: serviceName, price: price};\n        default:\n            return state;\n    }\n}\n","import {FILTER_SERVICE, REMOVE_FILTERED_SERVICE} from '../actions/actionTypes';\n\nconst initialState = {\n    status: 'inActive',\n    filteredServices: [],\n}\n\nexport function serviceFilterReducer(state = initialState, action) {\n    switch (action.type) {\n        case FILTER_SERVICE:\n            state = action.payload;\n            return state;\n        case REMOVE_FILTERED_SERVICE:\n            const id = action.payload;\n            state.status = 'active';\n            state.filteredServices = state.filteredServices.filter((service) => service.id !== id);\n            return state;\n        default:\n            return state;\n    }\n}\n","import {createStore, combineReducers} from 'redux';\nimport {serviceListReducer} from '../reducers/serviceList';\nimport {serviceAddReducer} from '../reducers/serviceAdd';\nimport {serviceFilterReducer} from '../reducers/serviceFilter';\n\nconst reducer = combineReducers({\n        serviceList: serviceListReducer,\n        serviceAdd: serviceAddReducer,\n        serviceFilter: serviceFilterReducer,\n    }\n)\n\nexport const store = createStore(reducer);\n","import {\n    ADD_SERVICE,\n    REMOVE_SERVICE,\n    CHANGE_SERVICE_FIELD,\n    CLEAR_SERVICE_FIELD,\n    EDIT_SERVICE,\n    EDIT_AND_SAVE_SERVICE,\n    FILTER_SERVICE, REMOVE_FILTERED_SERVICE\n} from './actionTypes';\n\nexport function addService(name, price) {\n    return {\n        type: ADD_SERVICE, payload: {name, price}\n    };\n}\n\nexport function clearServiceField() {\n    return {\n        type: CLEAR_SERVICE_FIELD\n    }\n}\n\nexport function removeService(id) {\n    return {\n        type: REMOVE_SERVICE, payload: {id}\n    };\n}\n\nexport function changeServiceField(name, value) {\n    return {\n        type: CHANGE_SERVICE_FIELD, payload: {name, value}\n    };\n}\n\nexport function editService(serviceName, price) {\n    return {\n        type: EDIT_SERVICE, payload: {serviceName, price}\n    };\n}\n\nexport function editAndSaveService(serviceId, serviceName, servicePrice) {\n    return {\n        type: EDIT_AND_SAVE_SERVICE, payload: {serviceId, serviceName, servicePrice}\n    };\n}\n\nexport function serviceFilter(status, filteredServices) {\n    return {\n        type: FILTER_SERVICE, payload: {status, filteredServices}\n    }\n}\n\nexport function removeFilteredService(id) {\n    return {\n        type: REMOVE_FILTERED_SERVICE, payload: id\n    }\n}\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {addService, changeServiceField, clearServiceField, editAndSaveService} from '../../actions/actionCreators';\n\nexport function ServiceAdd(props) {\n    const edit = props.editState.edit;\n    const item = useSelector((state) => state.serviceAdd);\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        (edit) ? dispatch(editAndSaveService(props.editState.serviceId, item.name, item.price))\n                    && props.setEdit({edit: false, serviceId: null})\n               : dispatch(addService(item.name, item.price));\n        dispatch(clearServiceField());\n        e.preventDefault();\n    };\n\n    const handleChange = (e) => {\n        const {name, value} = e.target;\n        dispatch(changeServiceField(name, value));\n    }\n\n    const handleEditServiceButton = () => {\n        props.setEdit({edit: false, serviceId: null});\n        dispatch(clearServiceField());\n    }\n\n    return (\n        <form className={'ServiceAdd'} onSubmit={handleSubmit}>\n            <input className={'ServiceAddInput'} name={'name'} onChange={handleChange} value={item.name}/>\n            <input className={'ServiceAddInput'} name={'price'} onChange={handleChange} value={item.price}/>\n            <button className={'ServiceAddButton'} type={'submit'}>Save</button>\n            {edit && <button className={'ServiceAddButton'} type={'button'} onClick={handleEditServiceButton}>Cancel</button>}\n        </form>\n    )\n}\n","import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {removeService, editService, removeFilteredService} from '../../actions/actionCreators';\n\nexport function ServiceList(props) {\n\n    const setEdit = props.setEdit;\n    const filter = useSelector((state) => state.serviceFilter)\n    const items = useSelector((state) => state.serviceList);\n    const viewItems = (filter.status === 'active') ? filter.filteredServices : items;\n    const dispatch = useDispatch();\n\n    const handleRemove = (id) => {\n        dispatch(removeService(id));\n        if (filter.status === 'active') dispatch(removeFilteredService(id));\n    }\n\n    const handleEdit = (id, serviceName, price) => {\n        setEdit({edit: true, serviceId: id});\n        dispatch(editService(serviceName, price));\n    }\n\n    return (\n        <ul className={'ServiceList'}>\n            {viewItems.map((item) =>\n                <li key={item.id} className={'ServiceItem'}>\n                    <div className={'ServiceWrapperValue'}>\n                        <span className={'ServiceValue'}>{item.name}</span>\n                        <span className={'ServiceValue'}>{item.price} ₽</span>\n                    </div>\n                    <div className={'ServiceListWrapperButtons'}>\n                        <button className={'ServiceButton'} onClick={() => handleEdit(item.id, item.name, item.price)}>✎</button>\n                        <button className={'ServiceButton'} onClick={() => handleRemove(item.id)}>✕</button>\n                    </div>\n                </li>)}\n        </ul>\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {serviceFilter} from '../../actions/actionCreators';\n\nexport function ServiceFilter() {\n    const services = useSelector((state) => state.serviceList);\n    const [actualServices, setActualServices] = useState(services);\n    const dispatch = useDispatch();\n\n    useEffect(() => setActualServices(services), [services]);\n\n    const handleServiceFilterChange = (e) => {\n        const inputValue = e.target.value;\n        const filteredServices = actualServices.filter((service) => service.name.toLowerCase().includes(inputValue.toLowerCase()));\n        dispatch(serviceFilter('active', filteredServices));\n        if (inputValue === '') dispatch(serviceFilter('inActive', []));\n    }\n\n    return (\n        <div className={'ServiceFilter'}>\n            <label htmlFor={'serviceFilter'}>\n                <input id={'serviceFilter'} onChange={handleServiceFilterChange} className={'ServiceFilterInput'} type={'text'} placeholder={'Найти задачу'}/>\n            </label>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport {ServiceAdd} from './ServiceAdd/ServiceAdd';\nimport {ServiceList} from './ServiceList/ServiceList';\nimport {ServiceFilter} from './ServiceFilter/ServiceFilter';\n\nexport function ServiceApp() {\n    const [state, setEdit] = useState({edit: false, serviceId: null});\n\n    return(\n        <div className={'ServiceApp'}>\n            <ServiceFilter/>\n            <ServiceAdd editState={state} setEdit={setEdit}/>\n            <ServiceList setEdit={setEdit}/>\n        </div>\n    )\n}\n","import './App.css';\nimport {store} from './store';\nimport {Provider} from 'react-redux';\nimport {ServiceApp} from './components/ServiceApp';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className=\"App\">\n                <ServiceApp />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}